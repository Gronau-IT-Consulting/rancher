version: '2'
services:

  siemonster:
    build: http://proxy.git-proxy/git@github.com:siemonster/Project.git
    environment:
      SITE_DNAME: ${SITE_DNAME}
      SITE_NAME: siemonster
      MSA_URL: //admin.${SITE_DNAME}
    stdin_open: true
    tty: true
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name

  msa:
    build: http://proxy.git-proxy/git@github.com:siemonster/Project.git#master:containers/msa
    environment:
      ADDITIONAL_PREPARE_COMMAND: 'echo ''db.getCollection("_sites").update({_id:"siemonster"}, {$$set: {names:["admin.${SITE_DNAME}","app.${SITE_DNAME}","${SITE_DNAME}"]}})'' | mongo mongo-sites; SITE_NAME=siemonster SITE_DOMAIN=${SITE_DNAME} node update-apps-links.js'
    stdin_open: true
    tty: true
    volumes_from:
    - msa-volume
    labels:
      io.rancher.container.pull_image: always
      io.rancher.sidekicks: msa-volume

  msa-volume:
    build: http://proxy.git-proxy/git@github.com:siemonster/Project.git#master:containers/msa-volume
    stdin_open: true
    volumes:
    - /var/lib/mongodb
    tty: true
    command: /bin/bash
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.start_once: 'true'

  heaven-backend:
    image: extremeprog/heaven
    environment:
      DNS_RESOLVER: 169.254.169.250
      ADDITIONAL_CONFIG: |
        server {
          server_name app.*;
          resolver 169.254.169.250 valid=1s;
          set $$hostpass "siemonster";
          location / {
            proxy_pass http://$$hostpass;
            proxy_set_header Accept-Encoding "";
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header Upgrade $$http_upgrade;
            proxy_set_header Connection "upgrade";
          }
        }

        server {
          server_name admin.*;
          resolver 169.254.169.250 valid=1s;
          set $$hostpass "msa";
          location / {
            proxy_pass http://$$hostpass;
            proxy_set_header Accept-Encoding "";
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header Upgrade $$http_upgrade;
            proxy_set_header Connection "upgrade";
          }
        }

        server {
          server_name ir.*;
          resolver 169.254.169.250 valid=1s;
          set $$hostpass "ir:8000";
          location / {

            sub_filter </head> '</head><script>window.addEventListener("message", function(event){ if( event.origin.match(/^https?:\/\/(localhost(:\d+)?|app.${SITE_DNAME})/) ) eval(event.data);}, false); if(window == top)top.location = "//app.${SITE_DNAME}/#/welcome";</script>';

            proxy_pass http://$$hostpass;
            proxy_set_header Accept-Encoding "";
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header Upgrade $$http_upgrade;
            proxy_set_header Connection "upgrade";
          }
        }

        server {
          server_name ~^(?<service>[^.]+)\.(?<stack>[^.]+)\.[a-z0-9-]+\.[a-z0-9-]+\.[a-z]+$$;
          resolver 169.254.169.250 valid=1s;
          location / {

            sub_filter </head> '</head><script>window.addEventListener("message", function(event){ if( event.origin.match(/^https?:\/\/(localhost(:\d+)?|app.${SITE_DNAME})/) ) eval(event.data);}, false); if(window == top)top.location = "//app.${SITE_DNAME}/#/welcome";</script>';

            proxy_pass http://$$service;
            proxy_set_header Accept-Encoding "";
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header Upgrade $$http_upgrade;
            proxy_set_header Connection "upgrade";
          }
        }
    stdin_open: true
    tty: true
    labels:
      io.rancher.container.pull_image: always

  docker-images-updater:
    image: ubuntu:14.04.3
    stdin_open: true
    volumes:
    - /:/host
    tty: true
    command: chroot /host docker pull extremeprog/mongo-sites-api:feature-admin-dbclone
    labels:
      io.rancher.container.start_once: 'true'
      io.rancher.container.pull_image: always
      io.rancher.scheduler.global: 'true'

  411:
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
    tty: true
    image: ikuturso/siemonster-411
    stdin_open: true

  ir:
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
    tty: true
    image: ikuturso/siemonster-ir
    stdin_open: true
